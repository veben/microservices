version: "3.7"
services:
  ########################## DEVELOPER ##########################
  developer-postgresql:
    container_name: developer-postgresql
    image: postgres:11.5-alpine
    ports: # Map container port 5432 to host port 5433
      - 5433:5432
    environment:
      - POSTGRES_DB=developer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=

  developer:
    container_name: developer
    build:
      context: .
      args:
        - APP_NAME=developer
        - APP_VERSION=0.0.1
    ports:
      - 8090:8090

  ########################## ORDER ##########################
  order-postgresql:
    container_name: order-postgresql
    image: postgres:11.5-alpine
    ports: # Map container port 5432 to host port 5434
      - 5434:5432
    environment:
      - POSTGRES_DB=order
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=

  order:
    container_name: order
    build:
      context: .
      args:
        - APP_NAME=order
        - APP_VERSION=0.0.1
    ports:
      - 8091:8091

  ########################## DEVELOPER INFORMATION ##########################
  developer-information-mongodb:
    container_name: developer-information-mongodb
    image: mongo:4.2.1
    restart: always
    ports:
      - 27018:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root

  # Allow to create collection and insert data at start
  mongo-seed:
    build:
      context: developer-information/mongo

  developer-information:
    container_name: developer-information
    build:
      context: .
      args:
        - APP_NAME=developer-information
        - APP_VERSION=0.0.1
    ports:
      - 8092:8092

  ########################## MS FRONT ##########################
  ms-front:
    container_name: ms-front
    build:
      context: ./ms-front
    ports:
      - 80:80

  ########################## PORTAINER ##########################
  portainer:
    container_name: portainer
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  portainer_data:
