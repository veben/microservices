name: Developer-CI

on:
  push:
    branches:
      - "master"
      - "feature/**"

env:
  service-name: developer
  service-version: 0.0.1
  java-version: 15

jobs:
  package-jar:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.java-version }}

      - name: Package jar
        working-directory: ./${{ env.service-name }}
        run: mvn -B clean package

      - name: Upload jar
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.service-name }}
          path: ${{ env.service-name }}/target/${{ env.service-name }}-${{ env.service-version }}.jar

      - name: Upload Dockerfile
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.service-name }}
          path: ${{ env.service-name }}/Dockerfile

  build-n-push-image:
    runs-on: ubuntu-latest
    needs: package-jar
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: ${{ env.service-name }}

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.java-version }}

      - name: Extract jar
        working-directory: ./${{ env.service-name }}
        run: java -Djarmode=layertools -jar ${{ env.service-name }}-${{ env.service-version }}.jar extract

      - name: Build and push Docker image
        uses: docker/build-push-action@v1
        env:
          DOCKER_BUILDKIT: 1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: veben/${{ env.service-name }}
          build_args: APP_NAME=${{ env.service-name }},APP_VERSION=${{ env.service-version }}
          path: ./${{ env.service-name }}
          tags: latest
